version: '3.8'

services:

  redis:
    image: redis:7-alpine
    ports:
      - mode: host
        published: 6379
        target: 6379
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    logging:
      driver: json-file
      options:
        max-size: "1000k"
        max-file: "2"

  web:
    image: role-app-nginx:latest
    depends_on:
      - app
    ports:
      - mode: host
        published: 80
        target: 80
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    logging:
      driver: json-file
      options:
        max-size: "1000k"
        max-file: "2"

  app:
    image: role-app:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    volumes:
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - CONTAINER_ROLE=app
      - APP_KEY=${APP_KEY}
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
    logging:
      driver: json-file
      options:
        max-size: "1000k"
        max-file: "2"

  scheduler:
    image: role-app:latest
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - CONTAINER_ROLE=scheduler
      - APP_KEY=${APP_KEY}
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
    logging:
      driver: json-file
      options:
        max-size: "1000k"
        max-file: "2"

  horizon:
    image: role-app:latest
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
    volumes:
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - CONTAINER_ROLE=horizon
      - APP_KEY=${APP_KEY}
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
    logging:
      driver: json-file
      options:
        max-size: "1000k"
        max-file: "2"

  migrator:
    image: role-app:latest
    deploy:
      mode: global
      restart_policy:
        condition: none
    volumes:
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - CONTAINER_ROLE=migrator
      - APP_KEY=${APP_KEY}
      - LOG_CHANNEL=syslog
      - QUEUE_CONNECTION=redis
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
    logging:
      driver: json-file
      options:
        max-size: "1000k"
        max-file: "2"
        
  database:
        image: mysql:latest
        container_name: mysql_db
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - mysql_data:/var/lib/mysql
        ports:
            - 3306:3306
volumes:
  mysql_data: 
